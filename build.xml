<?xml version="1.0" encoding="UTF-8"?>
<project name="JParCompiler" basedir="." default="main">

	<property name="src.dir" value="src" />
	<property name="build.dir" value="bin" />
	<property name="lib.dir" value="lib" />
	<property name="dist.dir" value="dist" />
	<property name="main-class" value="fib.Fib" />


	<property name="spooned.dir" value="spooned" />
	<property name="compiler.src.dir" value="compiler-src" />
	<property name="compiler.build.dir" value="compiler" />
	<property name="compiler.lib.dir" value="compiler-lib" />

	
	   
    <target name="clean">  
    	<echo message="In clean "/>  
        <delete dir="${build.dir}"/>
        <delete dir="${spooned.dir}"/>
    	<delete dir="${compiler.build.dir}"/>
    </target>  
	   
	
	<path id="classpath">
		<path refid="compiler.classpath" />
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>
	
	<path id="classpath.test">
			<path refid="classpath" />
		</path>

	<path id="compiler.classpath">
		<pathelement location="${compiler.build.dir}" />
		<fileset dir="${compiler.lib.dir}" includes="**/*.jar" />
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<target name="compile-compiler">
		<mkdir dir="${compiler.build.dir}" />
		<javac srcdir="${compiler.src.dir}" destdir="${compiler.build.dir}" classpathref="compiler.classpath" debug="true" />
	</target>

	<target name="precompile" depends="compile-compiler">
		<!-- define spoon task -->
		<taskdef name="spoon" classname="spoon.SpoonTask" classpathref="compiler.classpath" />

		<spoon classpathref="compiler.classpath" verbose="true">
			<sourceSet dir="${src.dir}" />
			<templateset dir="${compiler.src.dir}/aeminium/jparcompiler/templates" />
			<processor type="aeminium.jparcompiler.processing.AccessPermissionsProcessor" />
			<processor type="aeminium.jparcompiler.processing.SeqMethodProcessor" />
			<processor type="aeminium.jparcompiler.processing.TaskCreationProcessor" />
		</spoon>
		<delete dir="${spooned.dir}/aeminium/jparcompiler"/>
	</target>

	<target name="compile" depends="precompile">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${spooned.dir}" destdir="${build.dir}" classpathref="classpath" debug="true" />
	</target>

	<target name="main" depends="compile">
	</target>
	
	<target name="fetchruntime">
		<exec executable="ant" dir="../AeminiumRuntime/">
			<arg value="jar" />
		</exec>
		<copy file="../AeminiumRuntime/dist/AeminiumRuntime.jar" todir="${lib.dir}" />
		
		<exec executable="ant" dir="../AeminiumFutures/">
			<arg value="jar" />
		</exec>
		<copy file="../AeminiumFutures/dist/AeminiumFutures.jar" todir="${lib.dir}" />
	</target>

	<target name="run" depends="fetchruntime, compile">
		<java fork="true" classname="${main-class}">
			<classpath>
				<path location="${build.dir}" />
				<path refid="classpath" />
			</classpath>
			<!-- <jvmarg value="-Xrunhprof:cpu=samples,file=log.txt,depth=3"/> -->
		</java>
	</target>
	
	<target name="jar" depends="clean, compile">
		<mkdir dir="${dist.dir}" />
		<copy file="${lib.dir}/AeminiumRuntime.jar" todir="${dist.dir}" />
		<copy file="${lib.dir}/AeminiumFutures.jar" todir="${dist.dir}" />
		<jar destfile="${dist.dir}/JparCompilerExamples.jar">
		   <fileset dir="${build.dir}/" />
		   <!--<fileset dir="${spooned.dir}" />-->
		   <manifest>
			 <!-- Who is building this jar? -->
			 <attribute name="Built-By" value="${user.name}"/>
			 <!-- Information about the program itself -->
			 <attribute name="Implementation-Vendor" value="Aeminium Project"/>
			 <attribute name="Implementation-Title" value="JPar Examples"/>
		   </manifest>
		  </jar>
		</target>

</project>
